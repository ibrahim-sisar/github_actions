name: Discord Notification on File Changes & Pull Requests

on:
  push:
    branches:
      - main  # Runs on modifications to the main branch
  pull_request:
    types: [opened, synchronize, reopened]  # Runs when a PR is created, updated, or reopened

jobs:
  notify-discord:
    runs-on: ubuntu-latest

    steps:
      - name: Get Changed Files from GitHub API
        id: changed-files
        run: |
          FILES=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}" \
            | jq -r '.files[].filename' | tr '\n' ', ')
          echo "FILES=$FILES" >> $GITHUB_ENV

      - name: Format Commit Timestamp
        id: format-time
        run: |
          FORMATTED_TIME=$(date -u -d "${{ github.event.head_commit.timestamp }}" "+%A, %B %d, %Y at %I:%M %p UTC" 2>/dev/null || date -u -j -f "%Y-%m-%dT%H:%M:%SZ" "${{ github.event.head_commit.timestamp }}" "+%A, %B %d, %Y at %I:%M %p UTC")
          echo "FORMATTED_TIME=$FORMATTED_TIME" >> $GITHUB_ENV

      - name: Prepare Notification
        id: prepare-message
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            MESSAGE="🚀 **Files have been modified!**\n👤 **User:** ${{ github.actor }}\n📂 **Modified files:** \n\`\`\`${{ env.FILES }}\`\`\`\n⏰ **Time:** ${{ env.FORMATTED_TIME }}"
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            MESSAGE="📢 **Pull Request Update!**\n👤 **User:** ${{ github.actor }}\n🔗 **PR Title:** ${{ github.event.pull_request.title }}\n📝 **PR Description:**\n${{ github.event.pull_request.body }}\n📂 **Modified files:** \n\`\`\`${{ env.FILES }}\`\`\`\n⏰ **Time:** $(date -u "+%A, %B %d, %Y at %I:%M %p UTC")"
          else
            MESSAGE="⚠️ Unknown event triggered the workflow!"
          fi
          echo "MESSAGE=$MESSAGE" >> $GITHUB_ENV

      - name: Send Notification to Discord
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          MESSAGE: ${{ env.MESSAGE }}
        run: |
          if [[ -z "${MESSAGE}" ]]; then
            echo "No message to send, skipping Discord notification."
            exit 0
          fi

          PAYLOAD=$(jq -n --arg msg "$MESSAGE" '{username: "GitHub Actions", content: $msg}')
          curl -X POST -H "Content-Type: application/json" -d "$PAYLOAD" "$DISCORD_WEBHOOK_URL"

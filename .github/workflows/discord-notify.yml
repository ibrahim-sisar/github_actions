name: Discord Notification on File Change

on:
  push:
    branches:
      - main  # Runs on any modification to the main branch

jobs:
  notify-discord:
    runs-on: ubuntu-latest

    steps:
      - name: Get Changed Files from GitHub API
        id: changed-files
        run: |
          FILES=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}" \
            | jq -r '.files[].filename' | tr '\n' ', ')
          echo "FILES=$FILES" >> $GITHUB_ENV

      - name: Format Commit Timestamp
        id: format-time
        run: |
          FORMATTED_TIME=$(date -u -d "${{ github.event.head_commit.timestamp }}" "+%A, %B %d, %Y at %I:%M %p UTC")
          echo "FORMATTED_TIME=$FORMATTED_TIME" >> $GITHUB_ENV

      - name: Send Notification to Discord
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          COMMIT_AUTHOR: ${{ github.actor }}
          FORMATTED_TIME: ${{ env.FORMATTED_TIME }}
          FILES_CHANGED: ${{ env.FILES }}
        run: |
          if [[ -z "$FILES_CHANGED" ]]; then
            echo "No files changed, skipping Discord notification."
            exit 0
          fi

          # Prepare JSON payload
          PAYLOAD=$(jq -n \
            --arg author "$COMMIT_AUTHOR" \
            --arg files "$FILES_CHANGED" \
            --arg time "$FORMATTED_TIME" \
            '{username: "GitHub Actions", content: ("üöÄ **Files have been modified!**\nüë§ **User:** " + $author + "\nüìÇ **Modified files:** ```" + $files + "``` \n‚è∞ **Time:** " + $time)}')

          # Send notification to Discord
          curl -X POST -H "Content-Type: application/json" -d "$PAYLOAD" "$DISCORD_WEBHOOK_URL"
